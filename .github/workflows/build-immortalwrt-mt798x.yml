#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build ImmortalWrt-mt798x

permissions: write-all
# 开启写权限，防止无法上传到release

on:
  workflow_dispatch:
    inputs:
      LAN_IP:
        description: 'Set LAN IP Address'
        required: true
        default: '192.168.1.1'
      WIFI_DRIVER:
        description: 'Choose WiFi Driver'
        required: true
        default: 'v7.6.7.2-fw-20240823(recommend)'
        type: choice
        options:
        - v7.6.7.2-fw-20240823(recommend)
        - v7.6.6.1-fw-20230306(recommend)
        - v7.6.7.2-fw-default
        - v7.6.7.2-fw-20230306
        - v7.6.7.2-fw-20230330
        - v7.6.7.2-fw-20230411
        - v7.6.7.2-fw-20230717
        - v7.6.7.2-fw-20231024
        - v7.6.6.1-fw-default
        - v7.6.6.1-fw-20230330
        - v7.6.6.1-fw-20230411
        - v7.6.6.1-fw-20230717
        - v7.6.6.1-fw-20231024
        - v7.6.6.1-fw-20240823
      EEPROM:
        description: 'Use nx30pro eeprom and fixed WiFi MAC address'
        required: true
        default: true
        type: boolean
      USE_XR30_LED_DTS:
        description: 'Use xr30 led dts'
        required: true
        default: true
        type: boolean
      USE_52MHZ:
        description: 'Use 52MHz max-frequency'
        required: true
        default: false
        type: boolean

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-6.6.git
  REPO_BRANCH: 2410
  FREE_DISK_SH: scripts/free_disk_space.sh
  ENV_SH: scripts/environment.sh
  DIY_P1_SH: scripts/diy-part1.sh
  DIY_P2_SH: scripts/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "USE_XR30_LED_DTS=${{ github.event.inputs.USE_XR30_LED_DTS }}" >> $GITHUB_ENV
        echo "USE_NX30PRO_EEPROM=${{ github.event.inputs.USE_NX30PRO_EEPROM }}" >> $GITHUB_ENV
        echo "USE_52MHZ=${{ github.event.inputs.USE_52MHZ }}" >> $GITHUB_ENV
        chmod +x $FREE_DISK_SH && $FREE_DISK_SH
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq full-upgrade -y
        chmod +x $ENV_SH && $ENV_SH
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 克隆源码
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 开启缓存
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: 'openwrt21-cortexa53'
        prefix: ${{ github.workspace }}/openwrt

    - name: 更新 & 安装 feeds & 执行脚本
      run: |
        cd openwrt
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        #git fetch https://github.com/padavanonly/immortalwrt-mt798x
        #git merge FETCH_HEAD
        chmod +x $GITHUB_WORKSPACE/$DIY_P1_SH && $GITHUB_WORKSPACE/$DIY_P1_SH
        ./scripts/feeds update -a && ./scripts/feeds install -a 

    - name: 导入补丁和配置
      run: |
        [ -e files ] && mv files openwrt/files
        cat configs/xr30-emmc.config >> openwrt/.config
        cd openwrt
        chmod +x $GITHUB_WORKSPACE/$DIY_P2_SH && $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 设置是否使用 xr30 led dts
      run: |
        cp mt7981-cmcc-xr30-emmc.dtsi openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/mt7981-cmcc-rax3000m.dtsi

    - name: 设置LAN IP地址（路由器登录地址）
      run: |
        cd openwrt
        SET_IP=${{ github.event.inputs.LAN_IP }}
        if [[ $SET_IP =~ ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
            #修改immortalwrt.lan关联IP
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" $(find feeds/luci/modules/luci-mod-system -type f -name "flash.js")
            #修改默认IP地址
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" package/base-files/files/bin/config_generate
            echo "Set LAN IP Address: $SET_IP"
        else
            echo "Invalid IP address, use default."
        fi

    - name: 设置WiFi驱动版本
      run: |
        cd openwrt
        wifi_driver=$(echo "${{ github.event.inputs.WIFI_DRIVER }}" | sed -E 's/^(v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        firmware=$(echo "${{ github.event.inputs.WIFI_DRIVER }}" | sed -E 's/.*fw-([0-9]{8}|default).*/\1/g')
        if [ "$wifi_driver" == "v7.6.6.1" ]; then
                sed -i 's/CONFIG_MTK_MT_WIFI_DRIVER_VERSION_7672=y/CONFIG_MTK_MT_WIFI_DRIVER_VERSION_7661=y/g' .config
        fi
        if [ "$firmware" == "default" ]; then
                sed -i 's/CONFIG_MTK_MT_WIFI_MT7981_20240823=y/CONFIG_MTK_MT_WIFI_MT7981_DEFAULT_FIRMWARE=y/g' .config
        else
        	sed -i 's/CONFIG_MTK_MT_WIFI_MT7981_20240823=y/CONFIG_MTK_MT_WIFI_MT7981_${firmware}=y/g' .config
        fi
        echo "Use WiFi Driver: $wifi_driver-fw-$firmware"

    - name: 使用nx30pro的高功率eeprom并固定WiFi MAC地址
      if: github.event.inputs.EEPROM == 'true'
      run: |
        cd openwrt
        wifi_driver=$(echo "${{ github.event.inputs.WIFI_DRIVER }}" | sed -E 's/^(v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        if [ "$wifi_driver" == "v7.6.6.1" ]; then
                cp $GITHUB_WORKSPACE/mt79xx_20220907-8b55f5_eeprom.tar.xz dl/mt79xx_20220907-8b55f5.tar.xz
        else
                cp $GITHUB_WORKSPACE/mt79xx_20231229-4012a0_eeprom.tar.xz dl/mt79xx_20231229-4012a0.tar.xz
        fi
        ## 创建一个辅助文件。文件内容是写入MAC地址到dat文件，固定wifi MAC地址
        echo -e "\t\tlocal wifi0_mac=\"\$(mmc_get_mac_binary factory 0x04)\"
        \t\tsed -i \"/^MacAddress=.*/ {s/.*/MacAddress=\$wifi0_mac/;b;}; \\\$aMacAddress=\$wifi0_mac\" /etc/wireless/mediatek/mt7981.dbdc.b0.dat
        \t\tlocal wifi1_mac=\"\$(macaddr_setbit_la \$wifi0_mac)\"
        \t\tsed -i \"/^MacAddress=.*/ {s/.*/MacAddress=\$wifi1_mac/;b;}; \\\$aMacAddress=\$wifi1_mac\" /etc/wireless/mediatek/mt7981.dbdc.b1.dat" > temp_insert.txt
        ## 将文本内容写入02_network
        sed -i '/mediatek_setup_macs()/,/\};/ {/cmcc,rax3000m-emmc)/ {n;n;n;r temp_insert.txt
        }}' target/linux/mediatek/mt7981/base-files/etc/board.d/02_network

    - name: 设置 dts 闪存频率
      if: env.USE_52MHZ == 'true'
      run: |
        sed -i -e '/bus-width = <8>;/ a\	cap-mmc-highspeed;' openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/mt7981-cmcc-rax3000m-emmc.dts
        sed -i 's/26000000/52000000/g' openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/mt7981-cmcc-rax3000m-emmc.dts
        grep max-frequency openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/mt7981-cmcc-rax3000m-emmc.dts

    - name: 下载文件
      run: |
        cd openwrt
        make defconfig
        make download -j8 V=10
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件中
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传 bin 目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理文件
      id: organize
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        #rm -rf *.buildinfo 
        rm -rf *.json 
        #rm -rf *.manifest 
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件目录
      uses: actions/upload-artifact@main
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 生成发布标签
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        echo -e "### immortalwrt-mt7981-cmcc_rax3000z-emmc" >> release.txt
        
        echo "- eeprom 使用 H3C NX30 Pro 提取版本" >> release.txt
        eeprom_status="nx30pro_eeprom"
        max_frequency=$(($(grep -oP "max-frequency = <\K[0-9]*" openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/mt7981-cmcc-rax3000m-emmc.dts) / 1000000))
        echo "- 使用闪存频率: ${max_frequency}MHz" >> release.txt
        release_tag=$(date +"%Y.%m.%d-mt7981-cmcc_rax3000z-emmc-${wlan_luci_interface}-${eeprom_status}-${max_frequency}MHz")
        echo "release_tag=${release_tag}" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件发布
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: 删除旧发布的固件
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 7
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 删除过时工作流程
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 3
